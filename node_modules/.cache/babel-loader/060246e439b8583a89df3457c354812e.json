{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\susie\\\\Projects\\\\Monster-Friends\\\\src\\\\containers\\\\App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport Searchbox from '../components/Searchbox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport { setSearchField, requestMonsters } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchMonsters.searchField,\n    monsters: state.requestMonsters.monsters,\n    isPending: state.requestMonsters.isPending,\n    error: state.requestMonsters.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestMonsters: () => dispatch(requestMonsters())\n  };\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onRequestMonsters();\n  }\n\n  render() {\n    const {\n      searchField,\n      onSearchChange,\n      monsters,\n      isPending\n    } = this.props;\n    const filteredMonsters = monsters.filter(monster => {\n      return monster.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return isPending ? /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, \"Loading\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Monster friends\"), /*#__PURE__*/React.createElement(Searchbox, {\n      searchChange: onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Scroll, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ErrorBoundary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardList, {\n      robots: filteredMonsters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/susie/Projects/Monster-Friends/src/containers/App.js"],"names":["React","connect","CardList","Searchbox","Scroll","ErrorBoundary","setSearchField","requestMonsters","mapStateToProps","state","searchField","searchMonsters","monsters","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestMonsters","App","Component","componentDidMount","props","render","filteredMonsters","filter","monster","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,YAAhD;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,cAAN,CAAqBD,WAD7B;AAELE,IAAAA,QAAQ,EAAEH,KAAK,CAACF,eAAN,CAAsBK,QAF3B;AAGLC,IAAAA,SAAS,EAAEJ,KAAK,CAACF,eAAN,CAAsBM,SAH5B;AAILC,IAAAA,KAAK,EAAEL,KAAK,CAACF,eAAN,CAAsBO;AAJxB,GAAP;AAMD,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAD9B;AAELC,IAAAA,iBAAiB,EAAE,MAAML,QAAQ,CAACT,eAAe,EAAhB;AAF5B,GAAP;AAID,CALD;;AAOA,MAAMe,GAAN,SAAkBtB,KAAK,CAACuB,SAAxB,CAAkC;AAGhCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,iBAAX;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAChB,MAAAA,WAAD;AAAcO,MAAAA,cAAd;AAA8BL,MAAAA,QAA9B;AAAwCC,MAAAA;AAAxC,QAAqD,KAAKY,KAAhE;AACA,UAAME,gBAAgB,GAAGf,QAAQ,CAACgB,MAAT,CAAgBC,OAAO,IAAI;AAClD,aAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCtB,WAAW,CAACqB,WAAZ,EAApC,CAAP;AACD,KAFwB,CAAzB;AAGA,WAAOlB,SAAS,gBAChB;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADgB,gBAGd;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAEI,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEU,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAHF,CAHF;AAaD;;AAzB+B;;AA4BlC,eAAe1B,OAAO,CAACO,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\nimport Searchbox from '../components/Searchbox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nimport { setSearchField, requestMonsters } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchField: state.searchMonsters.searchField,\r\n    monsters: state.requestMonsters.monsters,\r\n    isPending: state.requestMonsters.isPending,\r\n    error: state.requestMonsters.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestMonsters: () => dispatch(requestMonsters())\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n  componentDidMount() {\r\n    this.props.onRequestMonsters();\r\n  }\r\n\r\n  render() {\r\n    const {searchField, onSearchChange, monsters, isPending} = this.props;\r\n    const filteredMonsters = monsters.filter(monster => {\r\n      return monster.name.toLowerCase().includes(searchField.toLowerCase());\r\n    })\r\n    return isPending ?\r\n    <h1 className='tc'>Loading</h1> :\r\n    (\r\n      <div className='tc'>\r\n        <h1 className='f1'>Monster friends</h1>\r\n        <Searchbox searchChange={onSearchChange}/>\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <CardList robots={filteredMonsters}/>\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}