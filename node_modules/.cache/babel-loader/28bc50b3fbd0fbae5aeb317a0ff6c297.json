{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_MONSTERS_PENDING, REQUEST_MONSTERS_SUCCESS, REQUEST_MONSTERS_FAILED } from './constants.js';\nconst initialStateSearch = {\n  searchField: ''\n};\nexport const searchMonsters = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {\n        searchField: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nconst initialStateMonsters = {\n  isPending: false,\n  monsters: [],\n  error: ''\n};\nexport const requestMonsters = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case REQUEST_MONSTERS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case REQUEST_MONSTERS_SUCCESS:\n      return Object.assign({}, state, {\n        monsters: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_MONSTERS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/susie/Projects/Monster-Friends/src/reducers.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_MONSTERS_PENDING","REQUEST_MONSTERS_SUCCESS","REQUEST_MONSTERS_FAILED","initialStateSearch","searchField","searchMonsters","state","action","type","Object","assign","payload","initialStateMonsters","isPending","monsters","error","requestMonsters","initialState"],"mappings":"AAAA,SACEA,mBADF,EAEEC,wBAFF,EAGEC,wBAHF,EAIEC,uBAJF,QAKO,gBALP;AAOA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,WAAW,EAAE;AADY,CAA3B;AAIA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAACH,kBAAP,EAA2BI,MAAM,GAAC,EAAlC,KAAyC;AACrE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKT,mBAAL;AACE,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACF,QAAAA,WAAW,EAAEG,MAAM,CAACI;AAArB,OAAzB,CAAP;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CAPM;AASP,MAAMM,oBAAoB,GAAG;AAC3BC,EAAAA,SAAS,EAAE,KADgB;AAE3BC,EAAAA,QAAQ,EAAE,EAFiB;AAG3BC,EAAAA,KAAK,EAAE;AAHoB,CAA7B;AAMA,OAAO,MAAMC,eAAe,GAAG,CAACV,KAAK,GAACW,YAAP,EAAqBV,MAAM,GAAE,EAA7B,KAAoC;AACjE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,wBAAL;AACE,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACO,QAAAA,SAAS,EAAE;AAAZ,OAAzB,CAAP;;AACF,SAAKZ,wBAAL;AACE,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACQ,QAAAA,QAAQ,EAAEP,MAAM,CAACI,OAAlB;AAA2BE,QAAAA,SAAS,EAAE;AAAtC,OAAzB,CAAP;;AACF,SAAKX,uBAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAACS,QAAAA,KAAK,EAAER,MAAM,CAACI,OAAf;AAAwBE,QAAAA,SAAS,EAAE;AAAnC,OAAzB,CAAP;;AACF;AACE,aAAOP,KAAP;AARJ;AAUD,CAXM","sourcesContent":["import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_MONSTERS_PENDING,\r\n  REQUEST_MONSTERS_SUCCESS,\r\n  REQUEST_MONSTERS_FAILED\r\n} from './constants.js';\r\n\r\nconst initialStateSearch = {\r\n  searchField: ''\r\n}\r\n\r\nexport const searchMonsters = (state=initialStateSearch, action={}) => {\r\n  switch(action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return Object.assign({}, state, {searchField: action.payload});\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialStateMonsters = {\r\n  isPending: false,\r\n  monsters: [],\r\n  error: ''\r\n}\r\n\r\nexport const requestMonsters = (state=initialState, action ={}) => {\r\n  switch(action.type) {\r\n    case REQUEST_MONSTERS_PENDING:\r\n      return Object.assign({}, state, {isPending: true})\r\n    case REQUEST_MONSTERS_SUCCESS:\r\n      return Object.assign({}, state, {monsters: action.payload, isPending: false })\r\n    case REQUEST_MONSTERS_FAILED:\r\n      return Object.assign({}, state, {error: action.payload, isPending: false })\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}