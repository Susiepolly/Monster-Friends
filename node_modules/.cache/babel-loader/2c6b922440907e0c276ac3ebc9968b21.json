{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\susie\\\\Projects\\\\Monster-Friends\\\\src\\\\containers\\\\App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport Searchbox from '../components/Searchbox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport { setSearchField, requestMonsters } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchMonsters.searchField,\n    monsters: state.requestMonsters.monsters,\n    isPending: state.requestMonsters.isPending,\n    error: state.requestMonsters.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestMonsters: () => dispatch(requestMonsters())\n  };\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n\n  render() {\n    const {\n      robots\n    } = this.state;\n    const {\n      searchField,\n      onSearchChange\n    } = this.props;\n    const filteredRobots = robots.filter(robots => {\n      return robots.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return !robots.length ? /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, \"Loading\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Monster friends\"), /*#__PURE__*/React.createElement(Searchbox, {\n      searchChange: onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Scroll, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ErrorBoundary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardList, {\n      robots: filteredRobots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/susie/Projects/Monster-Friends/src/containers/App.js"],"names":["React","connect","CardList","Searchbox","Scroll","ErrorBoundary","setSearchField","requestMonsters","mapStateToProps","state","searchField","searchMonsters","monsters","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestMonsters","App","Component","constructor","robots","componentDidMount","fetch","then","response","json","users","setState","render","props","filteredRobots","filter","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,YAAhD;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,cAAN,CAAqBD,WAD7B;AAELE,IAAAA,QAAQ,EAAEH,KAAK,CAACF,eAAN,CAAsBK,QAF3B;AAGLC,IAAAA,SAAS,EAAEJ,KAAK,CAACF,eAAN,CAAsBM,SAH5B;AAILC,IAAAA,KAAK,EAAEL,KAAK,CAACF,eAAN,CAAsBO;AAJxB,GAAP;AAMD,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAD9B;AAELC,IAAAA,iBAAiB,EAAE,MAAML,QAAQ,CAACT,eAAe,EAAhB;AAF5B,GAAP;AAID,CALD;;AAOA,MAAMe,GAAN,SAAkBtB,KAAK,CAACuB,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKf,KAAL,GAAY;AACVgB,MAAAA,MAAM,EAAE;AADE,KAAZ;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADnB,EAEGF,IAFH,CAEQG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEP,MAAAA,MAAM,EAAEM;AAAV,KAAd,CAFjB;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA;AAAF,QAAa,KAAKhB,KAAxB;AACA,UAAM;AAACC,MAAAA,WAAD;AAAcO,MAAAA;AAAd,QAAgC,KAAKiB,KAA3C;AACA,UAAMC,cAAc,GAAGV,MAAM,CAACW,MAAP,CAAcX,MAAM,IAAI;AAC7C,aAAOA,MAAM,CAACY,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC7B,WAAW,CAAC4B,WAAZ,EAAnC,CAAP;AACD,KAFsB,CAAvB;AAGA,WAAQ,CAACb,MAAM,CAACe,MAAT,gBACP;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADO,gBAGL;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAEvB,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEkB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAHF,CAHF;AAaD;;AAjC+B;;AAoClC,eAAelC,OAAO,CAACO,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\nimport Searchbox from '../components/Searchbox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nimport { setSearchField, requestMonsters } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchField: state.searchMonsters.searchField,\r\n    monsters: state.requestMonsters.monsters,\r\n    isPending: state.requestMonsters.isPending,\r\n    error: state.requestMonsters.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestMonsters: () => dispatch(requestMonsters())\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state ={\r\n      robots: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response=> response.json())\r\n      .then(users => this.setState({ robots: users }));\r\n  }\r\n\r\n  render() {\r\n    const { robots } = this.state;\r\n    const {searchField, onSearchChange} = this.props;\r\n    const filteredRobots = robots.filter(robots => {\r\n      return robots.name.toLowerCase().includes(searchField.toLowerCase());\r\n    })\r\n    return (!robots.length) ?\r\n    <h1 className='tc'>Loading</h1> :\r\n    (\r\n      <div className='tc'>\r\n        <h1 className='f1'>Monster friends</h1>\r\n        <Searchbox searchChange={onSearchChange}/>\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <CardList robots={filteredRobots}/>\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}